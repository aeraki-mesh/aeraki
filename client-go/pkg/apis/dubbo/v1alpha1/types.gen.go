/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by kubetype-gen. DO NOT EDIT.

package v1alpha1

import (
	dubbov1alpha1 "github.com/aeraki-mesh/aeraki/api/dubbo/v1alpha1"
	metav1alpha1 "istio.io/api/meta/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

//
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// DubboAuthorizationPolicy enables access control on Dubbo services.
//
// <!-- crd generation tags
// +cue-gen:DubboAuthorizationPolicy:groupName:dubbo.aeraki.io
// +cue-gen:DubboAuthorizationPolicy:version:v1alpha1
// +cue-gen:DubboAuthorizationPolicy:storageVersion
// +cue-gen:DubboAuthorizationPolicy:annotations:helm.sh/resource-policy=keep
// +cue-gen:DubboAuthorizationPolicy:labels:app=aeraki,chart=aeraki,heritage=Tiller,release=aeraki
// +cue-gen:DubboAuthorizationPolicy:subresource:status
// +cue-gen:DubboAuthorizationPolicy:scope:Namespaced
// +cue-gen:DubboAuthorizationPolicy:resource:categories=aeraki-io,dubbo-aeraki-io,plural=dubboauthorizationpolicies,shortNames=dap
// +cue-gen:DubboAuthorizationPolicy:preserveUnknownFields:false
// -->
//
// <!-- go code generation tags
// +kubetype-gen
// +kubetype-gen:groupVersion=dubbo.aeraki.io/v1alpha1
// +genclient
// +k8s:deepcopy-gen=true
// -->
type DubboAuthorizationPolicy struct {
	v1.TypeMeta `json:",inline"`
	// +optional
	v1.ObjectMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`

	// Spec defines the implementation of this definition.
	// +optional
	Spec dubbov1alpha1.DubboAuthorizationPolicy `json:"spec,omitempty" protobuf:"bytes,2,opt,name=spec"`

	Status metav1alpha1.IstioStatus `json:"status"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// DubboAuthorizationPolicyList is a collection of DubboAuthorizationPolicies.
type DubboAuthorizationPolicyList struct {
	v1.TypeMeta `json:",inline"`
	// +optional
	v1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
	Items       []DubboAuthorizationPolicy `json:"items" protobuf:"bytes,2,rep,name=items"`
}
