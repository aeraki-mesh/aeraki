# Copyright Aeraki Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: redisdestinations.redis.aeraki.io
spec:
  group: redis.aeraki.io
  names:
    categories:
      - redis-aeraki-io
    kind: RedisDestination
    listKind: RedisDestinationList
    plural: redisdestinations
    shortNames:
      - rd
    singular: redisdestination
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The name of a service from the service registry
          jsonPath: .spec.host
          name: Host
          type: string
        - description: 'CreationTimestamp is a timestamp representing the server time
        when this object was created. It is not guaranteed to be set in happens-before
        order across separate operations. Clients may not set this value. It is represented
        in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for
        lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                host:
                  format: string
                  type: string
                trafficPolicy:
                  properties:
                    connectionPool:
                      properties:
                        redis:
                          properties:
                            auth:
                              oneOf:
                                - not:
                                    anyOf:
                                      - required:
                                          - secret
                                      - required:
                                          - plain
                                - required:
                                    - secret
                                - required:
                                    - plain
                              properties:
                                plain:
                                  description: redis password.
                                  properties:
                                    password:
                                      format: string
                                      type: string
                                    username:
                                      format: string
                                      type: string
                                  type: object
                                secret:
                                  description: Secret use the k8s secret in current
                                    namespace.
                                  properties:
                                    name:
                                      format: string
                                      type: string
                                    passwordField:
                                      format: string
                                      type: string
                                    usernameField:
                                      format: string
                                      type: string
                                  type: object
                              type: object
                            discoveryEndpoints:
                              items:
                                format: string
                                type: string
                              type: array
                            mode:
                              enum:
                                - PROXY
                                - CLUSTER
                              type: string
                          type: object
                        tcp:
                          properties:
                            connectTimeout:
                              description: TCP connection timeout.
                              type: string
                            maxConnections:
                              description: Maximum number of HTTP1 /TCP connections
                                to a destination host.
                              format: int32
                              type: integer
                            tcpKeepalive:
                              description: If set then set SO_KEEPALIVE on the socket
                                to enable TCP Keepalives.
                              properties:
                                interval:
                                  description: The time duration between keep-alive
                                    probes.
                                  type: string
                                probes:
                                  type: integer
                                time:
                                  type: string
                              type: object
                          type: object
                      type: object
                  type: object
              type: object
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
