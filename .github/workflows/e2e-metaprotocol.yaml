---
name: e2e-metaprotocol

on:
  push:
    branches:
    - "master"
    - "release/v*"
    paths-ignore:
    - "**/*.png"
    - "**/*.md"
  pull_request:
    branches:
    - "master"
    - "release/v*"
    paths-ignore:
    - "**/*.png"
    - "**/*.md"

env:
  ISTIO_VERSION: 1.18.1
  ISTIO_NAMESPACE: istio-system
  SCRIPTS_DIR: test/e2e/scripts
  COMMON_DIR: test/e2e/common
  AERAKI_IMG_PULL_POLICY: Never
jobs:
  TestVersionRouting:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: true
    name: TestVersionRouting
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'
      - name: Install dependencies
        run: |
          go version
          go install golang.org/x/tools/cmd/goimports@latest
      - name: build docker
        run: make docker-build-e2e
      - name: Prepare envrionment
        run: bash ${SCRIPTS_DIR}/pre.sh
      - name: Install Minikube
        run: bash ${SCRIPTS_DIR}/minikube.sh start
      - name: Install Istio
        run: bash ${SCRIPTS_DIR}/istio.sh
      - name: Install aeraki
        run: bash ${SCRIPTS_DIR}/aeraki.sh
      - name: test
        run: go test -v github.com/aeraki-mesh/aeraki/test/e2e/metaprotocol/ -run TestVersionRouting
  TestAttributeRouting:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: true
    name: TestAttributeRouting
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'
      - name: Install dependencies
        run: |
          go version
          go install golang.org/x/tools/cmd/goimports@latest
      - name: build docker
        run: make docker-build-e2e
      - name: Prepare envrionment
        run: bash ${SCRIPTS_DIR}/pre.sh
      - name: Install Minikube
        run: bash ${SCRIPTS_DIR}/minikube.sh start
      - name: Install Istio
        run: bash ${SCRIPTS_DIR}/istio.sh
      - name: Install aeraki
        run: bash ${SCRIPTS_DIR}/aeraki.sh
      - name: test
        run: go test -v github.com/aeraki-mesh/aeraki/test/e2e/metaprotocol/ -run TestAttributeRouting
  TestPercentageRouting:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: true
    name: TestPercentageRouting
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'
      - name: Install dependencies
        run: |
          go version
          go install golang.org/x/tools/cmd/goimports@latest
      - name: build docker
        run: make docker-build-e2e
      - name: Prepare envrionment
        run: bash ${SCRIPTS_DIR}/pre.sh
      - name: Install Minikube
        run: bash ${SCRIPTS_DIR}/minikube.sh start
      - name: Install Istio
        run: bash ${SCRIPTS_DIR}/istio.sh
      - name: Install aeraki
        run: bash ${SCRIPTS_DIR}/aeraki.sh
      - name: test
        run: go test -v github.com/aeraki-mesh/aeraki/test/e2e/metaprotocol/ -run TestPercentageRouting
  TestLocalRateLimit:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: true
    name: TestLocalRateLimit
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'
      - name: Install dependencies
        run: |
          go version
          go install golang.org/x/tools/cmd/goimports@latest
      - name: build docker
        run: make docker-build-e2e
      - name: Prepare envrionment
        run: bash ${SCRIPTS_DIR}/pre.sh
      - name: Install Minikube
        run: bash ${SCRIPTS_DIR}/minikube.sh start
      - name: Install Istio
        run: bash ${SCRIPTS_DIR}/istio.sh
      - name: Install aeraki
        run: bash ${SCRIPTS_DIR}/aeraki.sh
      - name: test
        run: go test -v github.com/aeraki-mesh/aeraki/test/e2e/metaprotocol/ -run TestLocalRateLimit
  TestGlobalRateLimit:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: true
    name: TestGlobalRateLimit
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'
      - name: Install dependencies
        run: |
          go version
          go install golang.org/x/tools/cmd/goimports@latest
      - name: build docker
        run: make docker-build-e2e
      - name: Prepare envrionment
        run: bash ${SCRIPTS_DIR}/pre.sh
      - name: Install Minikube
        run: bash ${SCRIPTS_DIR}/minikube.sh start
      - name: Install Istio
        run: bash ${SCRIPTS_DIR}/istio.sh
      - name: Install aeraki
        run: bash ${SCRIPTS_DIR}/aeraki.sh
      - name: test
        run: go test -v github.com/aeraki-mesh/aeraki/test/e2e/metaprotocol/ -run TestGlobalRateLimit
  TestConsistentHashLb:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: true
    name: TestConsistentHashLb
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'
      - name: Install dependencies
        run: |
          go version
          go install golang.org/x/tools/cmd/goimports@latest
      - name: build docker
        run: make docker-build-e2e
      - name: Prepare envrionment
        run: bash ${SCRIPTS_DIR}/pre.sh
      - name: Install Minikube
        run: bash ${SCRIPTS_DIR}/minikube.sh start
      - name: Install Istio
        run: bash ${SCRIPTS_DIR}/istio.sh
      - name: Install aeraki
        run: bash ${SCRIPTS_DIR}/aeraki.sh
      - name: test
        run: go test -v github.com/aeraki-mesh/aeraki/test/e2e/metaprotocol/ -run TestConsistentHashLb
  TestExportToNS:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: true
    name: TestExportToNS
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'
      - name: Install dependencies
        run: |
          go version
          go install golang.org/x/tools/cmd/goimports@latest
      - name: build docker
        run: make docker-build-e2e
      - name: Prepare envrionment
        run: bash ${SCRIPTS_DIR}/pre.sh
      - name: Install Minikube
        run: bash ${SCRIPTS_DIR}/minikube.sh start
      - name: Install Istio
        run: bash ${SCRIPTS_DIR}/istio.sh
      - name: Install aeraki
        run: bash ${SCRIPTS_DIR}/aeraki.sh
      - name: test
        run: go test -v github.com/aeraki-mesh/aeraki/test/e2e/metaprotocol/ -run TestExportToNS
  TestTrafficMirror:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: true
    name: TestTrafficMirror
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'
      - name: Install dependencies
        run: |
          go version
          go install golang.org/x/tools/cmd/goimports@latest
      - name: build docker
        run: make docker-build-e2e
      - name: Prepare envrionment
        run: bash ${SCRIPTS_DIR}/pre.sh
      - name: Install Minikube
        run: bash ${SCRIPTS_DIR}/minikube.sh start
      - name: Install Istio
        run: bash ${SCRIPTS_DIR}/istio.sh
      - name: Install aeraki
        run: bash ${SCRIPTS_DIR}/aeraki.sh
      - name: test
        run: go test -v github.com/aeraki-mesh/aeraki/test/e2e/metaprotocol/ -run TestTrafficMirror
  TestHeaderMutation:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: true
    name: TestHeaderMutation
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'
      - name: Install dependencies
        run: |
          go version
          go install golang.org/x/tools/cmd/goimports@latest
      - name: build docker
        run: make docker-build-e2e
      - name: Prepare envrionment
        run: bash ${SCRIPTS_DIR}/pre.sh
      - name: Install Minikube
        run: bash ${SCRIPTS_DIR}/minikube.sh start
      - name: Install Istio
        run: bash ${SCRIPTS_DIR}/istio.sh
      - name: Install aeraki
        run: bash ${SCRIPTS_DIR}/aeraki.sh
      - name: test
        run: go test -v github.com/aeraki-mesh/aeraki/test/e2e/metaprotocol/ -run TestHeaderMutation
