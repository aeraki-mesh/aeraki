# Copyright Aeraki Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
version: "2"
linters:
  default: none
  enable:
    - bodyclose
    - gocritic
    - goheader
    - gosec
    - misspell
    - revive
    - staticcheck
    - unconvert
    - unparam
  settings:
    depguard:
      rules:
        Main:
          deny:
            - pkg: github.com/gogo/protobuf
              desc: gogo/protobuf is deprecated, use golang/protobuf
            - pkg: gopkg.in/yaml.v2
              desc: use sigs.k8s.io/yaml instead
            - pkg: gopkg.in/yaml.v3
              desc: use sigs.k8s.io/yaml instead
    dupl:
      threshold: 100
    funlen:
      lines: 80
      statements: 50
    goconst:
      min-len: 2
      min-occurrences: 3
    gocritic:
      disabled-checks:
        - dupImport
        - ifElseChain
        - octalLiteral
        - whyNoLint
        - wrapperFunc
      enabled-tags:
        - diagnostic
        - experimental
        - opinionated
        - performance
        - style
    gocyclo:
      min-complexity: 15
    govet:
      settings:
        printf:
          funcs: null
    lll:
      line-length: 120
    misspell:
      locale: US
    nolintlint:
      require-explanation: false
      require-specific: false
      allow-unused: false
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - path: (.+)\.go$
        text: declaration of "(err|ctx)" shadows declaration at
      - path: (.+)\.go$
        text: shadow of imported from
      - path: (.+)\.go$
        text: 'singleCaseSwitch: should rewrite switch statement to if statement'
    paths:
      - third_party$
      - builtin$
      - examples$
      - test

formatters:
  enable:
    - gofmt
    - goimports
  settings:
    goimports:
      local-prefixes:
        - github.com/aeraki-mesh/aeraki
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
      - test
