# Copyright Aeraki Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
linters-settings:
  depguard:
    rules:
      Main:
        deny:
          - pkg: github.com/gogo/protobuf
            desc: "gogo/protobuf is deprecated, use golang/protobuf"
          - pkg: gopkg.in/yaml.v2
            desc: "use sigs.k8s.io/yaml instead"
          - pkg: gopkg.in/yaml.v3
            desc: "use sigs.k8s.io/yaml instead"
  dupl:
    threshold: 100
  funlen:
    lines: 80
    statements: 50
  goconst:
    min-len: 2
    min-occurrences: 3
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport       # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
  gocyclo:
    min-complexity: 15
  goimports:
    local-prefixes: github.com/aeraki-mesh/aeraki
  gomnd:
    # don't include the "operation" and "assign"
    checks:
      - argument
      - case
      - condition
      - return
    ignored-numbers:
      - '0'
      - '1'
      - '2'
      - '3'
    ignored-functions:
      - strings.SplitN

  govet:
    check-shadowing: true
    settings:
      printf:
        funcs:
  lll:
    line-length: 120
  misspell:
    locale: US
  nolintlint:
    allow-leading-space: true      # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false            # report any unused nolint directives
    require-explanation: false     # don't require an explanation for nolint directives
    require-specific: false        # don't require nolint directives to be specific about which linter is being skipped

linters:
  disable-all: true
  enable:
    - stylecheck
    - bodyclose
    - exportloopref
    - gofmt
    - goimports
    - goheader
    - gocritic
    - gosec
    - misspell
    - revive
    - unconvert
    - unparam

  # don't enable:
  # - asciicheck
  # - scopelint
  # - gochecknoglobals
  # - gocognit
  # - godot
  # - godox
  # - goerr113
  # - interfacer
  # - maligned
  # - nestif
  # - prealloc
  # - testpackage
  # - revive
  # - wsl

issues:
  exclude:
    - 'declaration of "(err|ctx)" shadows declaration at'
    - 'shadow of imported from'
    - "singleCaseSwitch: should rewrite switch statement to if statement"

run:
  timeout: 5m
  go: '1.17'
  skip-dirs:
    - api
    - client-go
    - test
