// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/metaprotocol/v1alpha1/metaprotocol_metarouter.proto

// $schema: metaprotocol.aeraki.io.v1alpha1.MetaRouter
// $title: MetaRouter
// $description: MetaRouter defines route policies for MetaProtocol proxy.
//
// MetaRouter defines route policies for MetaProtocol proxy.
//
// ```yaml
// apiVersion: metaprotocol.aeraki.io/v1alpha1
// kind: MetaRouter
// metadata:
//   name: attribute-based-route
//   namespace: istio-system
// spec:
//   hosts:
//   - org.apache.dubbo.samples.basic.api.demoservice
//   routes:
//   - name: v1
//     match:
//       attributes:
//         interface:
//           exact: org.apache.dubbo.samples.basic.api.DemoService
//         method:
//           exact: sayHello
//     route:
//     - destination:
//         host: org.apache.dubbo.samples.basic.api.demoservice
//         subset: v1
//
// ```
//
// ```yaml
// apiVersion: metaprotocol.aeraki.io/v1alpha1
// kind: MetaRouter
// metadata:
//   name: traffic-splitting
// spec:
//   hosts:
//     - org.apache.dubbo.samples.basic.api.demoservice
//   routes:
//     - name: traffic-spilt
//       route:
//         - destination:
//             host: org.apache.dubbo.samples.basic.api.demoservice
//             subset: v1
//           weight: 20
//         - destination:
//             host: org.apache.dubbo.samples.basic.api.demoservice
//             subset: v2
//           weight: 80

package v1alpha1

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	_ "istio.io/gogo-genproto/googleapis/google/api"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// DeepCopyInto supports using MetaRouter within kubernetes types, where deepcopy-gen is used.
func (in *MetaRouter) DeepCopyInto(out *MetaRouter) {
	p := proto.Clone(in).(*MetaRouter)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetaRouter. Required by controller-gen.
func (in *MetaRouter) DeepCopy() *MetaRouter {
	if in == nil {
		return nil
	}
	out := new(MetaRouter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new MetaRouter. Required by controller-gen.
func (in *MetaRouter) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using MetaRoute within kubernetes types, where deepcopy-gen is used.
func (in *MetaRoute) DeepCopyInto(out *MetaRoute) {
	p := proto.Clone(in).(*MetaRoute)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetaRoute. Required by controller-gen.
func (in *MetaRoute) DeepCopy() *MetaRoute {
	if in == nil {
		return nil
	}
	out := new(MetaRoute)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new MetaRoute. Required by controller-gen.
func (in *MetaRoute) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using MetaRouteMatch within kubernetes types, where deepcopy-gen is used.
func (in *MetaRouteMatch) DeepCopyInto(out *MetaRouteMatch) {
	p := proto.Clone(in).(*MetaRouteMatch)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetaRouteMatch. Required by controller-gen.
func (in *MetaRouteMatch) DeepCopy() *MetaRouteMatch {
	if in == nil {
		return nil
	}
	out := new(MetaRouteMatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new MetaRouteMatch. Required by controller-gen.
func (in *MetaRouteMatch) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using StringMatch within kubernetes types, where deepcopy-gen is used.
func (in *StringMatch) DeepCopyInto(out *StringMatch) {
	p := proto.Clone(in).(*StringMatch)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StringMatch. Required by controller-gen.
func (in *StringMatch) DeepCopy() *StringMatch {
	if in == nil {
		return nil
	}
	out := new(StringMatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new StringMatch. Required by controller-gen.
func (in *StringMatch) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using MetaRouteDestination within kubernetes types, where deepcopy-gen is used.
func (in *MetaRouteDestination) DeepCopyInto(out *MetaRouteDestination) {
	p := proto.Clone(in).(*MetaRouteDestination)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetaRouteDestination. Required by controller-gen.
func (in *MetaRouteDestination) DeepCopy() *MetaRouteDestination {
	if in == nil {
		return nil
	}
	out := new(MetaRouteDestination)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new MetaRouteDestination. Required by controller-gen.
func (in *MetaRouteDestination) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using Destination within kubernetes types, where deepcopy-gen is used.
func (in *Destination) DeepCopyInto(out *Destination) {
	p := proto.Clone(in).(*Destination)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Destination. Required by controller-gen.
func (in *Destination) DeepCopy() *Destination {
	if in == nil {
		return nil
	}
	out := new(Destination)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new Destination. Required by controller-gen.
func (in *Destination) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using PortSelector within kubernetes types, where deepcopy-gen is used.
func (in *PortSelector) DeepCopyInto(out *PortSelector) {
	p := proto.Clone(in).(*PortSelector)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortSelector. Required by controller-gen.
func (in *PortSelector) DeepCopy() *PortSelector {
	if in == nil {
		return nil
	}
	out := new(PortSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new PortSelector. Required by controller-gen.
func (in *PortSelector) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using LocalRateLimit within kubernetes types, where deepcopy-gen is used.
func (in *LocalRateLimit) DeepCopyInto(out *LocalRateLimit) {
	p := proto.Clone(in).(*LocalRateLimit)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalRateLimit. Required by controller-gen.
func (in *LocalRateLimit) DeepCopy() *LocalRateLimit {
	if in == nil {
		return nil
	}
	out := new(LocalRateLimit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new LocalRateLimit. Required by controller-gen.
func (in *LocalRateLimit) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using TokenBucket within kubernetes types, where deepcopy-gen is used.
func (in *TokenBucket) DeepCopyInto(out *TokenBucket) {
	p := proto.Clone(in).(*TokenBucket)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenBucket. Required by controller-gen.
func (in *TokenBucket) DeepCopy() *TokenBucket {
	if in == nil {
		return nil
	}
	out := new(TokenBucket)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new TokenBucket. Required by controller-gen.
func (in *TokenBucket) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using RateLimitDescriptor within kubernetes types, where deepcopy-gen is used.
func (in *RateLimitDescriptor) DeepCopyInto(out *RateLimitDescriptor) {
	p := proto.Clone(in).(*RateLimitDescriptor)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitDescriptor. Required by controller-gen.
func (in *RateLimitDescriptor) DeepCopy() *RateLimitDescriptor {
	if in == nil {
		return nil
	}
	out := new(RateLimitDescriptor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitDescriptor. Required by controller-gen.
func (in *RateLimitDescriptor) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}

// DeepCopyInto supports using RateLimitDescriptor_Entry within kubernetes types, where deepcopy-gen is used.
func (in *RateLimitDescriptor_Entry) DeepCopyInto(out *RateLimitDescriptor_Entry) {
	p := proto.Clone(in).(*RateLimitDescriptor_Entry)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitDescriptor_Entry. Required by controller-gen.
func (in *RateLimitDescriptor_Entry) DeepCopy() *RateLimitDescriptor_Entry {
	if in == nil {
		return nil
	}
	out := new(RateLimitDescriptor_Entry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitDescriptor_Entry. Required by controller-gen.
func (in *RateLimitDescriptor_Entry) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}
