// Copyright Aeraki Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

import "google/api/field_behavior.proto";

// $schema: metaprotocol.aeraki.io.v1alpha1.ApplicationProtocol
// $title: Application Protocol
// $description: ApplicationProtocol defines an application protocol built on top of MetaProtocol.
//
// ApplicationProtocol defines an application protocol built on top of MetaProtocol.
//
// ```yaml
// apiVersion: metaprotocol.aeraki.io/v1alpha1
// kind: ApplicationProtocol
// metadata:
//   name: dubbo
//   namespace: istio-system
// spec:
//   protocol: dubbo
//   codec: aeraki.meta_protocol.codec.dubbo
// ```
package metaprotocol.aeraki.io.v1alpha1;

option go_package = "github.com/aeraki-framework/aeraki/api/metaprotocol/v1alpha1";

// ApplicationProtocol defines an application protocol built on top of MetaProtocol.
//
// <!-- crd generation tags
// +cue-gen:ApplicationProtocol:groupName:metaprotocol.aeraki.io
// +cue-gen:ApplicationProtocol:version:v1alpha1
// +cue-gen:ApplicationProtocol:storageVersion
// +cue-gen:ApplicationProtocol:annotations:helm.sh/resource-policy=keep
// +cue-gen:ApplicationProtocol:labels:app=aeraki,chart=aeraki,heritage=Tiller,release=aeraki
// +cue-gen:ApplicationProtocol:subresource:status
// +cue-gen:ApplicationProtocol:scope:Namespaced
// +cue-gen:ApplicationProtocol:resource:categories=aeraki-io,metaprotocol-aeraki-io
// +cue-gen:ApplicationProtocol:preserveUnknownFields:false
// -->
//
// <!-- go code generation tags
// +kubetype-gen
// +kubetype-gen:groupVersion=metaprotocol.aeraki.io/v1alpha1
// +genclient
// +k8s:deepcopy-gen=true
// -->
message ApplicationProtocol {
  string protocol = 1;
  string codec = 2;
}